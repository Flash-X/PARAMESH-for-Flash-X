2022-11-08  Klaus Weide  <kweide@uchicago.edu>

	* headers/paramesh_mpi_interfaces.F90: update interfaces of
	mpiSet_message_sizes, mpi_amr_get_remote_block,
	mpiGet_Sbuffer_size_fluxes for PDG support.
	* source/mpi_set_message_sizes.F90: add 'ig' argument to
	 subroutine now called mpiSet_message_sizes, make the subroutine
	PDG-aware.
	* source/mpi_amr_get_remote_block.F90: change subroutine to take
	argument 'pdg'. Add ONLY to some USE statements. Include
	"Flashx_mpi_implicitNone.fh". Tweak / add some debugging output.
	* source/mpi_pack_blocks.F90: in mpiPack_blocks, use
	gr_thePdgDimens to get 'nvar'. Tweak USE statements for PDG
	support. Add 'pdg%nfluxes' to mpiGet_Sbuffer_size_fluxes call.
	Include "Flashx_mpi_implicitNone.fh".
	* source/empi_get_flux_buffer.F90: make subroutine
	mpiGet_flux_buffer PDG-aware. Change subroutine
	mpiGet_Sbuffer_size_fluxes to take 'nfluxes' as argument. Some
	cleanup.
	* flash_avoid_orrery/amr_migrate_tree_data.F90,
	flash_avoid_orrery/amr_morton_process.F90,
	flash_avoid_orrery/local_tree_build.F90,
	flash_avoid_orrery/mpi_amr_exchange_nodetype.F90,
	flash_avoid_orrery/mpi_amr_refine_blocks.F90,
	headers/mpi_morton.F90, headers/paramesh_dimensions.F90,
	headers/prolong_arrays.F90, source/amr_migrate_tree_data.F90,
	source/fill_old_loc.F90, source/local_tree_build.F90,
	source/process_fetch_list.F90, source/rationalize_fetch_list.F90,
	amr_1blk_guardcell_reset.F90: clean up some USE statements,
	removing some that are unnecessary and adding ONLY to others.
	* source/amr_mpi_find_blk_in_buffer.F90: add output statements for
	debugging, disabled by default, to this crucial subroutine.
	* source/amr_1blk_cc_prol_genorder.F90: correct
	'first_call_overall' logic, tweak Robodoc synopsis.
	* source/amr_prolong_cc_fun_init.F90: correct n[xz]b associations.
	* source/mpi_lib.F90: clean up some USE paramesh_dimensions
	statements, removing some that are unnecessary and adding ONLY:
	ndim to others.
	* source/mpi_unpack_blocks.F90: clean up some USE
	paramesh_dimensions statements.
	* source/amr_check_refine.F90, source/mpi_amr_check_derefine.F90, source/mpi_amr_local_surr_blks_lkup.F90: use paramesh_dimensions
	with ONLY.
	* source/amr_morton_order.F90: remove some unnecessay USE statements.
	* source/mpi_amr_global_domain_limits.F90: remove unnecessary
	REORDER directives and Use paramesh_dimensions statements.
	* flash_avoid_orrery/amr_initialize.F90,
	flash_avoid_orrery/physicaldata.F90, headers/gr_pmPdgDecl.F90,
	headers/paramesh_interfaces.F90, headers/physicaldata.F90,
	source/amr_1blk_fc_prol_dbz.F90, source/amr_block_geometry.F90,
	source/amr_close.F90, source/amr_initialize.F90,
	source/gr_pdgClose.F90, source/gr_pdgInit.F90,
	source/mpi_amr_1blk_restrict.F90,
	source/mpi_amr_prolong_fc_divbconsist.F90,
	source/mpi_amr_restrict_fulltree.F90: move cell_* geometry arrays
	from the physicaldata module into pdg_t.
	* flash_avoid_orrery/mpi_amr_derefine_blocks.F90: update for PDG
	support.
	* headers/paramesh_interfaces.F90,
	source/amr_1blk_cc_prol_gen_unk_fun.F90,
	source/mpi_amr_1blk_guardcell_c_to_f.F90,
	source/mpi_amr_prolong.F90: add pdg,ig arguments to amr_1blk_cc_prol_gen_unk_fun.
	* headers/paramesh_interfaces.F90,
	source/amr_1blk_to_perm.F90,
	source/mpi_amr_prolong.F90: add pdg,ig arguments to amr_1blk_to_perm.
	* headers/paramesh_interfaces.F90,
	source/amr_restrict_unk_genorder.F90,
	source/amr_restrict_unk_fun.F90: add ig dummy argument to amr_restrict_unk_genorder.

2022-11-03  Klaus Weide  <kweide@uchicago.edu>

	* source/mpi_amr_comm_setup.F90: rename called routine to
	mpiSet_message_sizes.
	* source/mpi_amr_1blk_guardcell.F90: call routine
	mpi_amr_get_remote_block with additional argument 'pdg'. Add code
	for debugging, mostly commented out.

2022-11-02  Klaus Weide  <kweide@uchicago.edu>

	* source/mpi_amr_1blk_guardcell.F90,source/mpi_amr_comm_setup.F90:
	comment out (ifdef MAYBE_UNNECESSARY) nlayers-increasing code for
	cases of large nguard-to-n[xyz]b ratios: (1) it is unclear how
	this helped at all (maybe it is a leftover from old PARAMESH
	versions that had dedicated f_to_c routines for guard cell filling
	at f/c boundaries); (2) nxb/nguard < 2 etc. should be avoided
	anyway for various reasons; (3) for valid operations, this code
	needs to be enabled (or disabled) consistently between the two
	source files, which is rather ugly and error-prone.

	* source/amr_perm_to_1blk.F90,source/mpi_amr_comm_setup.F90,source/mpi_get_buffer.F90:
	use PDG-specific constants and variables where needed, instead of
	global ones from the paramesh_dimensions and physicaldata modules.

	* headers/paramesh_interfaces.F90,source/amr_restrict_unk_fun.F90,source/mpi_amr_1blk_restrict.F90,source/mpi_amr_restrict_fulltree.F90:
	add ig to amr_restrict_unk_fun interface.

	* source/mpi_amr_1blk_guardcell.F90,source/mpi_amr_prolong.F90:
	supply 'ig' argument to flash_(un)?convert_cc_hook calls.

2022-10-31  Klaus Weide  <kweide@uchicago.edu>

	* bittree/amr_initialize.F90,flash_avoid_orrery/amr_initialize.F90,
	flash_avoid_orrery/physicaldata.F90,headers/gr_pmPdgDecl.F90,
	headers/physicaldata.F90,source/amr_initialize.F90,
	source/amr_close.F90,source/gr_pdgClose.F90,source/gr_pdgInit.F90,
	source/mpi_amr_guardcell.F90: move gcell_on_cc flag array into
	pdg_t.

	* flash_avoid_orrery/physicaldata.F90,headers/physicaldata.F90:
	add TARGET attribute to various mask and interpolation-order
	arrays.

2022-10-28  Klaus Weide  <kweide@uchicago.edu>

	* source/mpi_amr_guardcell.F90: tweak generation of 'nlayers'
	argument to amr_guardcell_onePdg in amr_guardcell_pdgNo for pdgNo
	ranges, and skip action completely if a PDG has no guard cells.
	Tweak handling of (mostly ignored) 'nlayers' argument in amr_guardcell_onePdg.

2022-10-26  Klaus Weide  <kweide@uchicago.edu>

	* headers/paramesh_interfaces.F90: add amr_prolong_gen_unk1_fun
	interface. Change intent for some recv arguments to IN. Add
	explicit '#include "Simulation.h"'. The recv argument to
	amr_prolong_gen_unk1_fun is now declared CONTIGUOUS_INTENT(IN), dimension(:,:,:,:).

	* source/amr_1blk_cc_prol_inject.F90,amr_1blk_cc_prol_linear.F90,amr_1blk_cc_prol_genorder.F90:
	Change intent for recv arguments to IN.

	* source/amr_1blk_cc_prol_gen_unk_fun.F90: use gr_thePdgDimens
	from paramesh_dimensions (so far only for nvar).
	Use explicit interface for amr_prolong_gen_unk1_fun.
	Pass arguments pdg,ig when calling mr_prolong_gen_unk1_fun.

2022-10-20  Klaus Weide  <kweide@uchicago.edu>

	* headers/gr_pmPdgDecl.F90: add 8 more slots to type pdgConst_t:
	nspecies, speciesBegin, speciesEnd, tempVar, gamcVar, gameVar,
	sumyMscalar, yeMscalar.

2022-10-14  Klaus Weide  <kweide@uchicago.edu>

	* source/amr_1blk_guardcell_srl.F90: added ig argument to
	amr_1blk_bcset calls.

	* headers/paramesh_interfaces.F90: added ig dummy argument to
	amr_1blk_bcset interface.

	* headers/gr_pmPdgDecl.F90: correct type of 7 slots densVar...velzVar
	to integer.

2022-10-13  Klaus Weide  <kweide@uchicago.edu>

	* gr_pmPdgDecl.F90: add 7 slots densVar...velzVar to derived type
	pdgConst_t, for generalizing previously hardwired references to
	DENS_VAR,...,VELZ_VAR occurring in various Grid unit source files
	to the multi-PDG situation.

2022-10-11  Klaus Weide  <kweide@uchicago.edu>

	* bittree/mpi_amr_redist_blk.F90: use gr_pmPdgDecl module. Narrow
	USE statements.

	* amr_morton_order_bittree.F90: use explicit interface for
	amr_redist_blk.

2022-10-10  Klaus Weide  <kweide@uchicago.edu>

	* bittree/amr_initialize.F90, bittree/mpi_amr_redist_blk.F90,
	flash_avoid_orrery/amr_initialize.F90, headers/gr_pmPdgDecl.F90,
	headers/paramesh_interfaces.F90, source/amr_initialize.F90,
	source/fill_old_loc.F90, source/gr_pdgInit.F90,
	source/mpi_amr_redist_blk.F90, source/send_block_data.F90: add
	support for data redistribution (as part of regridding) for UNK
	data of all PDGs. Can be suppressed with new `doRedist` flag in
	the pdg_t derived type (for now initialized to .TRUE.).

2022-10-07  Klaus Weide  <kweide@uchicago.edu>

	* headers/paramesh_interfaces.F90: add pdg,ig dummy args to
	amr_1blk_cc_prol_linear, amr_1blk_cc_prol_genorder interfaces.

	* source/amr_1blk_cc_prol_genorder.F90: add pdg,ig args, make
	implementation PDG-specifc.

	* source/amr_1blk_cc_prol_linear.F90: add pdg arg, make
	implementation PDG-specifc.

	* source/amr_1blk_cc_prol_gen_unk_fun.F90: Temporary changes to
	call a couple of subsidiary rountines with pdg,ig arguments
	(referring to the DEFAULT pdg, for now).

2022-10-04  Klaus Weide  <kweide@uchicago.edu>

	* flash_avoid_orrery/amr_initialize.F90: use #include
	"gr_pmPdgDimenInit.fh" for initialization also in LIBRARY mode.

	* headers/paramesh_interfaces.F90: update
	amr_prolong_cc_fun_init interface.

	* source/amr_prolong_cc_fun_init.F90: add pdg,ig dummy args.

	* source/amr_prolong_fun_init.F90: call amr_prolong_cc_fun_init in
	a loop over groups.

2022-09-30  Klaus Weide  <kweide@uchicago.edu>

	* flash_avoid_orrery/amr_initialize.F90: add a crucial piece
	piece of PDG initialization: call gr_pdgInitOne in a loop, once
	for each PDG.

2022-09-29  Klaus Weide  <kweide@uchicago.edu>

	* headers/paramesh_dimensions.F90: introduce 'include
	"gr_pmPdgDimenInit.fh"' for initializing PARAMESH constants
	hardwired for several physicaldata groups. This relies on support
	of the Flash-X configuration mechanism (setup.py) for generating
	the file to included (and other files included by THAT file).

